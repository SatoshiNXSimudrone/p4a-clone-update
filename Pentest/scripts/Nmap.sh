#!/bin/bash
function VersionD
  {
   clear
   dialog --inputbox \
   "Enter Target" 0 0 2>inputbox.txt.$$
   retval=$?
   echo $retval
   Ip=`cat inputbox.txt.$$`
   rm  inputbox.txt.$$
   case $retval in
   0)
   botbrew nmap -sS -P0 -sV -O $Ip
   echo ""
   echo "Press any Key to proceed"
   read temp;;
   1)
   echo "Cancel pressed.";;
   esac
  }
function lOP
   {
    clear
    sdcard/Pentest/files/cat header.txt
    echo""
    botbrew nmap -sT -p 80 -oG – 192.168.1.*
    echo ""
    echo "Press any Key to proceed"
    read temp
   }
function sOP
   {
    clear
    cat sdcard/Pentest/files/header.txt
    echo""
    botbrew nmap -sP 192.168.1.*
    echo ""
    echo "Press any Key to proceed"
    read temp
   }
function pRA
  {
    clear
    cat /sdcard/Pentest/files/header.txt
    echo""
    botbrew nmap -sP 192.168.1.100-254
    echo ""
    echo "Press any Key to proceed"
    read temp
  }
   function sTf 
    {
    clear
    dialog --inputbox \
   "Enter file name" 0 0 2>inputbox.txt.$$
   retval=$?
   echo $retval
   fileN=`cat inputbox.txt.$$`
   rm  inputbox.txt.$$
   case $retval in
   0)
    echo "TEXT INTERFACE ONLY:"
     echo ""
    echo "PLEASE ENTER TARGET TO SCAN!"
    read trg
    botbrew nmap $trg -oN /sdcard/Pentest/tmp/nmap/$fileN
    echo ""
    echo "Press any Key to proceed"
    read tmp
    botbrew nmap -v -O --osscan-guess $trg >> /sdcard/Pentest/tmp/nmap/$fileN
    echo "Press any Key to proceed"
    read tmp 
    botbrew nmap --iflist >> /sdcard/Pentest/tmp/nmap/$fileN
    echo "done"
   botbrew nmap -T5 192.168.1.1/24 >> /sdcard/Pentest/tmp/nmap/$fileN
  echo "done"
  botbrew nmap -sV $trg >> /sdcard/Pentest/tmp/nmap/$fileN
  echo "done"
  botbrew nmap --min-parallelism 100 -sT -sU $trg >>/sdcard/Pentest/tmp/nmap/$fileN
  echo "done"
    read temp;;
   1)
   echo "Cancel pressed.";;
   esac
    
}
function sRf
{
   clear
   cat /sdcard/Pentest/files/header.txt
   echo""
   echo "OPTIONS" 
   echo "1. Create File"
   echo "2. Scan File"
   echo "Enter Choice"
   read op
    if [ $op -eq 1 ]; then
    	echo "Enter name for Scan File"
        read Sf
        cat > /sdcard/Pentest/tmp/nmap/$Sf.txt

    fi
    if [ $op -eq 2 ]; then
       echo "Enter file name"
       read fileN
       botbrew nmap -iL /sdcard/Pentest/tmp/nmap/$fileN.txt
    fi
   }
function sOI
   {
    clear
    dialog --inputbox \
   "Enter Target" 0 0 2>inputbox.txt.$$
   retval=$?
   echo $retval
   target=`cat inputbox.txt.$$`
   rm  inputbox.txt.$$
   case $retval in
   0)
    botbrew nmap -A $target
    echo ""
    echo "Press any Key to proceed"
    read temp;;
   1)
   echo "Cancel pressed.";;
   esac
   }
function scanF
   {
    clear
    dialog --inputbox \
   "Enter name of file" 0 0 2>inputbox.txt.$$
   retval=$?
   echo $retval
   file=`cat inputbox.txt.$$`
   rm  inputbox.txt.$$
   case $retval in
   0)
    cat sdcard/Pentest/tmp/nmap/$file
    echo ""
    echo "Press any Key to proceed"
    read temp;;
   1)
   echo "Cancel pressed.";;
   esac
   }
function cmd
   {
    clear
    bactT=$'p4a HElp MESSAGE'
	msg=$'Enter nmap command\n without using: <nmap> prefix\ni.e. -sT -p 80 -oG – 192.168.1.* '
	dialog --title 'Message'\
    --backtitle "$bactT" \
	--msgbox "$ettercap" 0 0    
    clear
    dialog --inputbox \
   "Enter nmap command " 0 0 2>inputbox.txt.$$
   retval=$?
   echo $retval
   cmd=`cat inputbox.txt.$$`
   rm  inputbox.txt.$$
   case $retval in
   0)
    botbrew nmap $cmd
    echo ""
    echo "Press any Key to proceed"
    read temp;;
   1)
   echo "Cancel pressed.";;
   esac
    botbrew nmap $cmd
    echo ""
    echo "Press any Key to proceed"
    read temp
   }
while : 
do
 dialog --clear --backtitle "P4A SIMUDRONES NX" --title "NMAP OPTIONS" \
    --menu "Use [UP/DOWN] key to move" 12 60 6 \
    "VERS_DET" "VERSION DETECTION" \
    "LIST_p"   "LIST OF OPEN PORTS" \
    "SCAN_OP"  "SCAN OPEN PORTS" \
    "PING_RA"  "PING RANGE OF ADRESSES" \
    "SCAN_TO"    "SCAN TO FILE" \
    "SCAN_RWF" "SCAN WRITE FILE" \
    "SCAN_OI"  "SCAN OS Information " \
    "SCAN_F"    "SCAN FILE" \
    "CMD"     "ENTER CUSTOM COMAND" \
    "EXIT"      "TO EXIT" 2> menuchoices.txt.$$

    retopt=$?
    choice=`cat menuchoices.txt.$$`
 rm menuchoices.txt.$$

    case $retopt in

           0) case $choice in

                  VERS_DET)  VersioD ;;
                  LIST_p)   lOP ;;
                  SCAN_OP)     sOP ;;
                  PING_RA)      pRA;;
                  SCAN_TO)       sTf ;;
                  SCAN_RWF)   sRf ;;
                  SCAN_OI)     sOI ;;
                  SCAN_F)      scanF ;;
                  CMD)       cmd ;;
                  EXIT)       clear; exit 0;;
              esac ;; 

          *)clear ; exit ;;
    esac

done 
